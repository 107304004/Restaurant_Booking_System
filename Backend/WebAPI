import mysql.connector
from flask import Flask, jsonify, request
from config import *

app = Flask(__name__)

# Define MySQL connection information
cnx = mysql.connector.connect(user= DATABASE_USERNAME, password= DATABASE_PASSWORD, host= DATABASE_HOST, database= DATABASE_NAME)

# create cursor
cursor = cnx.cursor()

# RA Read All users
@app.route('/users', methods=['GET'])
def get_users():
    query = "SELECT * FROM users"
    cursor.execute(query)
    result = cursor.fetchall()

    users = []
    for user in result:
        user_data = {
            'id': user[0],
            'name': user[1],
            'email': user[2]
        }
        users.append(user_data)

    return jsonify(users)

# R Read user
@app.route('/users/<int:user_id>', methods=['GET'])
def get_user(user_id):
    query = "SELECT * FROM users WHERE id = %s"
    cursor.execute(query, (user_id,))
    result = cursor.fetchone()

    if result:
        user_data = {
            'id': result[0],
            'name': result[1],
            'email': result[2]
        }
        return jsonify(user_data)
    else:
        return jsonify({'error': 'User not found'})

# C create user
@app.route('/users', methods=['POST'])
def create_user():
    name = request.json['name']
    email = request.json['email']
    password = request.json['password']
    query = "INSERT INTO users (name, email,password) VALUES (%s, %s, %s)"
    cursor.execute(query, (name, email, password))
    cnx.commit()

    return jsonify({'message': 'User created'})

# U update user
@app.route('/users/<int:user_id>', methods=['PATCH'])
def update_user(user_id):
    name = request.json['name']
    email = request.json['email']
    password = request.json['password']
    user_id = request.json['user_id']
    
    query = "UPDATE users SET name = %s, email = %s, password = %s WHERE id = %s"
    cursor.execute(query, (name, email, password, user_id))

    cnx.commit()

    return jsonify({'message': 'User updated'})

# D delete user
@app.route('/users/<int:user_id>', methods=['DELETE'])
def delete_user(user_id):
    query = "DELETE FROM users WHERE id = %s"
    cursor.execute(query, (user_id,))
    cnx.commit()
    return jsonify({'message': 'User deleted'})



if __name__ == '__main__':
    app.run(debug=True)